{"ast":null,"code":"\"client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleClientScriptLoad = handleClientScriptLoad;\nexports.initScriptLoader = initScriptLoader;\nexports.default = void 0;\nvar _extends = require(\"@swc/helpers/lib/_extends.js\").default;\nvar _interop_require_wildcard = require(\"@swc/helpers/lib/_interop_require_wildcard.js\").default;\nvar _object_without_properties_loose = require(\"@swc/helpers/lib/_object_without_properties_loose.js\").default;\nvar _react = _interop_require_wildcard(require(\"react\"));\nvar _headManagerContext = require(\"../shared/lib/head-manager-context\");\nvar _headManager = require(\"./head-manager\");\nvar _requestIdleCallback = require(\"./request-idle-callback\");\n'client';\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = ['onLoad', 'onReady', 'dangerouslySetInnerHTML', 'children', 'onError', 'strategy'];\nconst loadScript = props => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError\n  } = props;\n  const cacheKey = id || src;\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return;\n  }\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey);\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError);\n    return;\n  }\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady();\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey);\n  };\n  const el = document.createElement('script');\n  const loadPromise = new Promise((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve();\n      if (onLoad) {\n        onLoad.call(this, e);\n      }\n      afterLoad();\n    });\n    el.addEventListener('error', function (e) {\n      reject(e);\n    });\n  }).catch(function (e) {\n    if (onError) {\n      onError(e);\n    }\n  });\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n    afterLoad();\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n    afterLoad();\n  } else if (src) {\n    el.src = src;\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n    ScriptCache.set(src, loadPromise);\n  }\n  for (const [k, value] of Object.entries(props)) {\n    if (value === undefined || ignoreProps.includes(k)) {\n      continue;\n    }\n    const attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n    el.setAttribute(attr, value);\n  }\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown');\n  }\n  el.setAttribute('data-nscript', strategy);\n  document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n  const {\n    strategy = 'afterInteractive'\n  } = props;\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      (0, _requestIdleCallback).requestIdleCallback(() => loadScript(props));\n    });\n  } else {\n    loadScript(props);\n  }\n}\nfunction loadLazyScript(props) {\n  if (document.readyState === 'complete') {\n    (0, _requestIdleCallback).requestIdleCallback(() => loadScript(props));\n  } else {\n    window.addEventListener('load', () => {\n      (0, _requestIdleCallback).requestIdleCallback(() => loadScript(props));\n    });\n  }\n}\nfunction addBeforeInteractiveToCache() {\n  const scripts = [...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'), ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')];\n  scripts.forEach(script => {\n    const cacheKey = script.id || script.getAttribute('src');\n    LoadCache.add(cacheKey);\n  });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n  scriptLoaderItems.forEach(handleClientScriptLoad);\n  addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n  const {\n      id,\n      src = '',\n      onLoad = () => {},\n      onReady = null,\n      strategy = 'afterInteractive',\n      onError\n    } = props,\n    restProps = _object_without_properties_loose(props, [\"id\", \"src\", \"onLoad\", \"onReady\", \"strategy\", \"onError\"]);\n  // Context is available only during SSR\n  const {\n    updateScripts,\n    scripts,\n    getIsSsr\n  } = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n  /**\n  * - First mount:\n  *   1. The useEffect for onReady executes\n  *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n  *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n  *   3. The useEffect for loadScript executes\n  *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n  *      Once the script is loaded, the onLoad and onReady will be called by then\n  *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n  *   5. The useEffect for onReady executes again\n  *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n  *   7. The useEffect for loadScript executes again\n  *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n  *\n  * - Second mount:\n  *   1. The useEffect for onReady executes\n  *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n  *      onReady is called, set hasOnReadyEffectCalled.current to true\n  *   3. The useEffect for loadScript executes\n  *   4. The script is already loaded, loadScript bails out\n  *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n  *   5. The useEffect for onReady executes again\n  *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n  *   7. The useEffect for loadScript executes again\n  *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n  */\n  const hasOnReadyEffectCalled = (0, _react).useRef(false);\n  (0, _react).useEffect(() => {\n    const cacheKey = id || src;\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady();\n      }\n      hasOnReadyEffectCalled.current = true;\n    }\n  }, [onReady, id, src]);\n  const hasLoadScriptEffectCalled = (0, _react).useRef(false);\n  (0, _react).useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props);\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props);\n      }\n      hasLoadScriptEffectCalled.current = true;\n    }\n  }, [props, strategy]);\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([_extends({\n        id,\n        src,\n        onLoad,\n        onReady,\n        onError\n      }, restProps)]);\n      updateScripts(scripts);\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src);\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props);\n    }\n  }\n  return null;\n}\nObject.defineProperty(Script, '__nextScript', {\n  value: true\n});\nvar _default = Script;\nexports.default = _default;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["handleClientScriptLoad","_object_without_properties_loose","require","default","_react","_interop_require_wildcard","_headManagerContext","_headManager","_requestIdleCallback","ScriptCache","Map","LoadCache","Set","ignoreProps","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","document","createElement","loadPromise","Promise","resolve","reject","e","call","innerHTML","__html","textContent","Array","isArray","join","set","k","value","Object","entries","undefined","includes","attr","DOMAttributeNames","toLowerCase","setAttribute","body","appendChild","addEventListener","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","querySelectorAll","forEach","script","getAttribute","initScriptLoader","scriptLoaderItems","Script","restProps","updateScripts","scripts","getIsSsr","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","defineProperty"],"sources":["../../client/script.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}