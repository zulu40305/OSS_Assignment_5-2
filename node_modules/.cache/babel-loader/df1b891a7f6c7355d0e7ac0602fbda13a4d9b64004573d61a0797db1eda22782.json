{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSortedRoutes = getSortedRoutes;\nclass UrlNode {\n  insert(urlPath) {\n    this._insert(urlPath.split('/').filter(Boolean), [], false);\n  }\n  smoosh() {\n    return this._smoosh();\n  }\n  _smoosh(prefix = '/') {\n    const childrenPaths = [...this.children.keys()].sort();\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1);\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1);\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1);\n    }\n    const routes = childrenPaths.map(c => this.children.get(c)._smoosh(`${prefix}${c}/`)).reduce((prev, curr) => [...prev, ...curr], []);\n    if (this.slugName !== null) {\n      routes.push(...this.children.get('[]')._smoosh(`${prefix}[${this.slugName}]/`));\n    }\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1);\n      if (this.optionalRestSlugName != null) {\n        throw new Error(`You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`);\n      }\n      routes.unshift(r);\n    }\n    if (this.restSlugName !== null) {\n      routes.push(...this.children.get('[...]')._smoosh(`${prefix}[...${this.restSlugName}]/`));\n    }\n    if (this.optionalRestSlugName !== null) {\n      routes.push(...this.children.get('[[...]]')._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`));\n    }\n    return routes;\n  }\n  _insert(urlPaths, slugNames, isCatchAll) {\n    if (urlPaths.length === 0) {\n      this.placeholder = false;\n      return;\n    }\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`);\n    }\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0];\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1);\n      let isOptional = false;\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1);\n        isOptional = true;\n      }\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3);\n        isCatchAll = true;\n      }\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(`Segment names may not start or end with extra brackets ('${segmentName}').`);\n      }\n      if (segmentName.startsWith('.')) {\n        throw new Error(`Segment names may not start with erroneous periods ('${segmentName}').`);\n      }\n      function handleSlug(previousSlug, nextSlug) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(`You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`);\n          }\n        }\n        slugNames.forEach(slug => {\n          if (slug === nextSlug) {\n            throw new Error(`You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`);\n          }\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(`You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`);\n          }\n        });\n        slugNames.push(nextSlug);\n      }\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(`You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`);\n          }\n          handleSlug(this.optionalRestSlugName, segmentName);\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName;\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]';\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(`You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`);\n          }\n          handleSlug(this.restSlugName, segmentName);\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName;\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]';\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(`Optional route parameters are not yet supported (\"${urlPaths[0]}\").`);\n        }\n        handleSlug(this.slugName, segmentName);\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName;\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]';\n      }\n    }\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode());\n    }\n    this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);\n  }\n  constructor() {\n    this.placeholder = true;\n    this.children = new Map();\n    this.slugName = null;\n    this.restSlugName = null;\n    this.optionalRestSlugName = null;\n  }\n}\nfunction getSortedRoutes(normalizedPages) {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode();\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach(pagePath => root.insert(pagePath));\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh();\n}","map":{"version":3,"names":["getSortedRoutes","UrlNode","insert","urlPath","_insert","split","filter","Boolean","smoosh","_smoosh","prefix","childrenPaths","children","keys","sort","slugName","splice","indexOf","restSlugName","optionalRestSlugName","routes","map","c","get","reduce","prev","curr","push","placeholder","r","slice","Error","unshift","urlPaths","slugNames","isCatchAll","length","nextSegment","startsWith","endsWith","segmentName","isOptional","substring","handleSlug","previousSlug","nextSlug","forEach","slug","replace","has","set","Map","normalizedPages","root","pagePath"],"sources":["../../../../../shared/lib/router/utils/sorted-routes.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}